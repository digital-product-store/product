version: "3"
services:
    elasticsearch:
      image: elasticsearch:7.17.10
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - discovery.type=single-node
    kibana:
      image: kibana:7.17.10
      ports:
        - "5601:5601"
      links:
        - elasticsearch
      depends_on:
        - elasticsearch
    apm-server:
      image: elastic/apm-server:7.17.10
      ports:
        - "8200:8200"
      volumes:
        - ./apm-server.yml:/usr/share/apm-server/apm-server.yml
      depends_on:
        - elasticsearch
      links:
        - elasticsearch
        - kibana
    localstack:
      image: localstack/localstack:2.1
      environment:
        - DEBUG=${DEBUG-}
        - DOCKER_HOST=unix:///var/run/docker.sock
        - LOCALSTACK_HOST=localhost:4566
      volumes:
        - "./init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh"
        - "/var/run/docker.sock:/var/run/docker.sock"
    postgresql:
      image: postgres:15-alpine
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      volumes: 
        - ./db/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
        - ./db/listen_all.sh:/docker-entrypoint-initdb.d/listen_all.sh
    ads-product:
      build:
        context: .
        dockerfile: Dockerfile
      image: ads-product:latest
      ports:
        - "8001:8000"
      environment:
        - AWS_S3_ENDPOINT_URL=http://localstack:4566
        - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/postgres
        - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      links:
        - postgresql
        - localstack
      depends_on:
        - postgresql
        - localstack
